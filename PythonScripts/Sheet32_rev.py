# -*- coding: utf-8 -*-
"""
Created on Sun May 21 19:21:45 2017

@author: ubuntu
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rcParams
rcParams.update({'figure.autolayout': True})
rcParams['figure.figsize'] = 5, 5

#size = np.multiply(np.arange(1,11), np.power(2, 27))
xaxis = (np.arange(32) +1 )* 32
#xaxis = np.power(2, np.arange(11))

#measuring results
#resultsd2h= np.array(((41.9435,21.0734,14.0825,10.5652,8.46155,7.0708,6.07877,5.31518,4.73863,4.28398,3.91254,3.59406,3.39277,3.40092,3.38631,3.37861,3.41679,3.39373,3.38828,3.38787,3.41994,3.39284,3.38627,3.38507,3.40968,3.39109,3.38953,3.38889,3.41026,3.38776,3.39251,3.38877),(21.0073,10.5476,7.03822,5.2935,4.25089,3.55148,3.39336,3.38771,3.42653,3.38619,3.38671,3.38678,3.40093,3.38754,3.391,3.38959,3.40075,3.39764,3.39555,3.39902,3.3995,3.40078,3.3981,3.40405,3.39964,3.40364,3.40356,3.40608,3.40808,3.40667,3.41005,3.40918),(14.0462,7.04055,4.70981,3.54262,3.42922,3.40284,3.39861,3.39233,3.40022,3.38725,3.3864,3.38919,3.39153,3.39523,3.39435,3.39555,3.39965,3.40084,3.4005,3.40397,3.40186,3.40706,3.40377,3.40708,3.40464,3.40728,3.40503,3.40645,3.40973,3.40777,3.40688,3.41001),(10.5272,5.29165,3.53987,3.42944,3.42225,3.41612,3.38775,3.39735,3.39248,3.39529,3.39295,3.39364,3.39686,3.39828,3.3983,3.40208,3.40148,3.40353,3.40364,3.40441,3.40133,3.40178,3.40386,3.40444,3.4052,3.40495,3.40425,3.4113,3.40935,3.4034,3.40234,3.41528)))

resultsh2d = np.array(((76.3724,38.3709,25.522,19.1612,15.3289,12.7701,10.9429,9.61505,8.51386,7.6762,6.96985,6.39374,5.89782,5.47868,5.12335,4.83603,4.52563,4.26618,4.05169,3.84311,3.66489,3.50575,3.37218,3.24183,3.12159,3.00528,2.91156,2.81645,2.73077,2.6411,2.5693,2.49182),(38.3078,19.1792,12.7602,9.60069,7.66743,6.39348,5.47808,4.82817,4.25428,3.8354,3.49333,3.22891,2.99673,2.80875,2.64004,2.48996,2.34854,2.23126,2.1196,2.02668,1.94182,1.86599,1.82666,1.8051,1.78707,1.77422,1.7695,1.76574,1.76432,1.76353,1.76344,1.76304),(25.5172,12.7852,8.50982,6.39954,5.11495,4.25704,3.65256,3.22674,2.901,2.63946,2.41283,2.22426,2.06727,1.93399,1.84023,1.81042,1.78263,1.77287,1.76806,1.7663,1.76595,1.7665,1.7658,1.76581,1.76599,1.76567,1.76589,1.76641,1.76607,1.76573,1.76597,1.76598),(19.2154,9.63895,6.41149,4.84422,3.84287,3.23363,2.81563,2.49327,2.22835,2.02499,1.8641,1.80841,1.77574,1.76759,1.76545,1.76501,1.7651,1.76495,1.76535,1.7655,1.76535,1.76587,1.76562,1.76595,1.76586,1.76573,1.76626,1.76656,1.76653,1.74023,1.73938,1.74005)))

resultsd2h = np.array(((21.4367,10.7754,7.20564,5.44724,4.35371,3.60256,3.0934,2.71344,2.4275,2.19134,2.00418,1.84305,1.71798,1.70061,1.69297,1.68972,1.70947,1.69965,1.69378,1.69363,1.71166,1.69748,1.69463,1.69434,1.70596,1.69673,1.69404,1.69347,1.7062,1.69481,1.69604,1.6943),(10.7622,5.4281,3.59651,2.66574,2.16308,1.81967,1.69921,1.69615,1.71454,1.69393,1.69462,1.69303,1.70079,1.69385,1.69527,1.6962,1.70133,1.69703,1.69869,1.69958,1.69989,1.70047,1.69923,1.70154,1.6996,1.70149,1.70046,1.70431,1.70278,1.70382,1.70333,1.70607),(7.19902,3.59755,2.37918,1.81204,1.71697,1.71242,1.697,1.69548,1.70097,1.69534,1.69412,1.69628,1.69665,1.69796,1.6975,1.69868,1.70055,1.70011,1.70107,1.70132,1.70156,1.70441,1.70149,1.70305,1.70322,1.70314,1.70233,1.70349,1.7041,1.70371,1.70274,1.70471),(5.43205,2.66705,1.81211,1.70195,1.70868,1.70964,1.69292,1.69828,1.69844,1.70056,1.69653,1.69662,1.69748,1.69951,1.69919,1.70042,1.70126,1.70192,1.70203,1.70254,1.70111,1.70102,1.70156,1.70232,1.70233,1.70158,1.70295,1.70489,1.7043,1.70224,1.7017,1.70639)))



#resultsh2d = resultsh2d / 5
#resultsd2h = resultsd2h / 5
#divide by 5 because we measured 5 times

sbpltNbmr = 2
rubbish, sbplts = plt.subplots(sbpltNbmr)
    
for i in range(sbpltNbmr):
    plotNumber = i
        
    if i == 0:
        resgbs= resultsd2h
        sbplts[plotNumber].set_title("Device to Host")
    if i == 1:
        resgbs = resultsh2d
        sbplts[plotNumber].set_title("Host to Device")
    
    resgbs = np.divide(resgbs,5)
    resgbs = np.divide((2 ** 29) * 4, resgbs.astype(float))       
    resgbs= np.divide(resgbs, 1e9)
    
    for lines in range(0, np.shape(resultsd2h)[0]):
    
        sbplts[plotNumber].plot(xaxis*(lines+1), resgbs[lines,:], label = "Anzahl Bloecke = " + str(1+lines))
        sbplts[plotNumber].scatter(xaxis*(lines+1), resgbs[lines,:], s = 2)
            #plt.axis.Tick
        sbplts[plotNumber].grid(True)
        sbplts[plotNumber].legend(bbox_to_anchor=(1.05,1), loc = 2)
       # sbplts[plotNumber].set_title("N =" + str((2 ** plotNumber) * 8))
        
plt.xlabel("Anzahl Threads")
plt.ylabel("Datendurchsatz in GB/s")

for ax in sbplts.flat:
    ax.set(ylabel="Kopierrate in GB/s", xlabel="Anzahl Threads")
    
plt.savefig('fig.svg', format='svg', bbox_inches='tight')
rcParams['figure.figsize'] = 5, 3