# -*- coding: utf-8 -*-
"""
Created on Sun May 21 19:21:45 2017

@author: ubuntu
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rcParams
rcParams.update({'figure.autolayout': True})

#size = np.multiply(np.arange(1,11), np.power(2, 27))
xaxis = np.arange(11)
#xaxis = np.power(2, np.arange(11))

#measuring results
#results = np.array((((0.106746,0.104668,0.10489,0.104837,0.104933,0.104948,0.105276,0.105029,0.106205,0.105911,0.105713),(0.106244,0.104583,0.104786,0.105092,0.105237,0.105229,0.105367,0.105552,0.105461,0.105755,0.106068),(0.106256,0.105768,0.105913,0.106022,0.105694,0.105389,0.105414,0.105654,0.105482,0.105533,0.106199)),((0.106261,0.104576,0.105031,0.105048,0.104926,0.104953,0.105273,0.105,0.106289,0.106128,0.105502),(0.106242,0.104583,0.104753,0.105066,0.105237,0.105225,0.105316,0.105581,0.105448,0.10574,0.106256),(0.106167,0.106138,0.105825,0.105865,0.10579,0.105358,0.105404,0.10574,0.105479,0.105511,0.10626)),((0.10627,0.104576,0.105084,0.105033,0.104914,0.104934,0.105245,0.105047,0.106413,0.106007,0.105549),(0.106182,0.10464,0.104792,0.105036,0.105185,0.105134,0.105326,0.105586,0.105435,0.10549,0.1064),(10e42,10e42,10e42,10e42,10e42,10e42,10e42,10e42,10e42,10e42,10e42))))
#divide by 10 because we measured 10 times
results = np.array(((1.06516,1.05452,1.05057,1.0496,1.40464,1.39162,1.23364,1.24742,1.18536,1.62449,1.69809),(1.06291,1.04996,1.05246,1.05919,1.79268,1.85162,1.85053,1.7851,1.73691,1.99201,2.06566),(1.06276,1.04949,1.05261,1.05877,1.78955,1.84553,1.84328,1.77581,1.73797,1.99218,2.06544),(1.06267,1.04973,1.05277,1.05632,1.79984,1.83404,1.84495,1.78174,1.7441,1.98933,2.06127),(1.06272,1.04933,1.05373,1.05776,1.80341,1.83628,1.84873,1.79428,1.7372,1.98974,2.06452),(1.06217,1.05037,1.05314,1.05584,1.81128,1.84992,1.86603,1.7736,1.73609,1.98816,2.07347)))
                
results = np.array(((1.06699,1.05495,1.04982,1.04917,1.40308,1.38947,1.21991,1.22684,1.18785,1.62129,1.69329),(1.06405,1.0497,1.05239,1.05704,1.76645,1.8281,1.82236,1.7311,1.69699,1.96012,2.05597),(1.06364,1.0495,1.05234,1.05708,1.76412,1.82057,1.82145,1.72886,1.70387,1.96154,2.06535),(1.06419,1.04925,1.05268,1.05494,1.78364,1.81673,1.82338,1.72719,1.70305,1.96132,2.04785),(1.06418,1.04977,1.05378,1.05557,1.78705,1.83151,1.83161,1.75486,1.70348,1.95618,2.05511),(1.06342,1.05165,1.05294,1.05657,1.79825,1.83801,1.84416,1.71352,1.69217,1.95749,2.0542)))

results = np.array(((1.1616,1.05501,1.04147,1.04793,1.31155,1.30431,1.06925,1.06825,1.07029,1.6178,1.68906),(1.05984,1.04931,1.05159,1.04948,1.7876,1.85506,1.79097,1.71326,1.63828,1.99284,2.06742),(1.05982,1.0497,1.05101,1.04875,1.78612,1.8496,1.78118,1.70913,1.6516,1.99288,2.07673),(1.06014,1.04965,1.05054,1.04899,1.79792,1.83659,1.78867,1.70033,1.65251,1.99204,2.05926),(1.06048,1.04974,1.05081,1.04858,1.79972,1.84042,1.8207,1.70544,1.64318,1.98837,2.07653),(1.06007,1.05172,1.05076,1.04861,1.814,1.8513,1.84308,1.7148,1.64144,1.99002,2.07279)))

newresults = np.array(((1.16401,1.04338,1.05145,1.07056,1.07623,1.07785,1.05587,1.05565,1.16576,1.23818,1.22342),(1.05927,1.04362,1.05179,1.06971,1.07422,1.0774,1.05631,1.05592,1.17164,1.24118,1.2245),(1.05974,1.04325,1.05066,1.06888,1.07388,1.07655,1.0555,1.05597,1.17253,1.24493,1.21194),(1.06057,1.04408,1.05159,1.06923,1.07422,1.07634,1.05655,1.05664,1.17151,1.23744,1.21394),(1.06025,1.04893,1.0519,1.07058,1.07544,1.07802,1.05705,1.05835,1.16934,1.22239,1.22806)))

results = newresults
                                                                                                                                                
results = np.divide(results, 100)

#divide by the size
resgbs= np.divide(np.power(2,30), results);

resgbs= np.divide(resgbs, 1e9)
#resgbs= resgbs *2

sbpltNbmr = 1
rubbish, sbplts = plt.subplots(sbpltNbmr)
for plotNumber in range(0, 1):
    for N in range(0, np.shape(results)[0]):#
    
        
       if results[N, 0] <= 10e30: 
            sbplts.plot(xaxis, resgbs[N,:], label = str((2 ** N) * 8) +  " SubdomÃ¤nen")
            sbplts.scatter(xaxis, resgbs[N,:])#, s = 2)
#plt.axis.Tick
    sbplts.grid()
    sbplts.legend(bbox_to_anchor=(1.05,1), loc = 2)
plt.xlabel("$\log_{2}$(Iterationen)")
plt.ylabel("Kopierrate in GB/s")
plt.savefig('fig.svg', format='svg', bbox_inches='tight')