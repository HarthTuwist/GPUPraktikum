# -*- coding: utf-8 -*-
"""
Created on Sun May 21 19:21:45 2017

@author: ubuntu
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rcParams
rcParams.update({'figure.autolayout': True})
rcParams['figure.figsize'] = 5, 3

#size = np.multiply(np.arange(1,11), np.power(2, 27))
xaxis = (np.arange(32) +1 )* 32
#xaxis = np.power(2, np.arange(11))

#measuring results
#resultsd2hunified= np.array(((42.0468,21.0862,14.0966,10.6007,8.53908,7.15212,6.13771,5.35744,4.80669,4.35236,3.97191,3.6456,3.39006,3.15665,2.95694,2.77213,2.62678,2.49054,2.36475,2.24695,2.157,2.06565,1.98658,1.90318,1.84874,1.78628,1.72601,1.66145,1.62614,1.57729,1.53398,1.48152),(21.0883,10.5728,7.11558,5.32338,4.30665,3.62923,3.12605,2.73491,2.46135,2.22667,2.03319,1.87008,1.7465,1.62551,1.53075,1.43409,1.37455,1.30952,1.25266,1.19536,1.15847,1.11601,1.08035,1.0392,1.01555,0.980526,0.950575,0.919839,0.901532,0.87627,0.855656,0.828594),(14.0892,7.11036,4.74588,3.60701,2.91815,2.45158,2.1135,1.86185,1.67405,1.51691,1.39174,1.28797,1.21333,1.14255,1.07946,1.02149,0.978968,0.932346,0.891365,0.852514,0.828545,0.797285,0.771548,0.744572,0.73223,0.712422,0.692633,0.670884,0.65859,0.641241,0.625269,0.609007),(10.5802,5.31883,3.59741,2.71311,2.20938,1.86096,1.60617,1.41093,1.28475,1.17574,1.08562,1.00965,0.952264,0.893734,0.843507,0.799963,0.770293,0.73701,0.70941,0.683883,0.664016,0.63987,0.61824,0.597763,0.586372,0.569921,0.553578,0.53741,0.529855,0.516517,0.503108,0.469825)))


###########TODO 
#resultsh2dunified = np.array(((42.0506,21.0859,14.0977,10.6014,8.53246,7.14858,6.1336,5.35601,4.80231,4.3495,3.97016,3.64763,3.39462,3.15905,2.9595,2.77747,2.62916,2.49378,2.36778,2.2519,2.15784,2.06747,1.9887,1.90722,1.85041,1.78741,1.72702,1.66538,1.62816,1.57721,1.53363,1.48628),(21.0318,10.5737,7.11145,5.31906,4.30054,3.62079,3.12323,2.74068,2.464,2.22898,2.03305,1.87011,1.74381,1.62671,1.52915,1.43615,1.37585,1.31209,1.25409,1.20079,1.15853,1.11405,1.07511,1.03574,1.00927,0.978097,0.947257,0.92025,0.903101,0.879186,0.859407,0.834743),(14.0702,7.10753,4.74118,3.60728,2.91437,2.45552,2.11575,1.86376,1.6725,1.51784,1.39184,1.29052,1.21612,1.14104,1.07611,1.01701,0.974529,0.9302,0.89122,0.856223,0.831248,0.801768,0.773573,0.745422,0.729557,0.709002,0.688508,0.669497,0.658319,0.641678,0.625448,0.609671),(10.5662,5.31638,3.60067,2.7162,2.21142,1.85944,1.60437,1.41545,1.2864,1.17688,1.08398,1.00518,0.949749,0.894237,0.84889,0.802002,0.773029,0.738783,0.708354,0.67888,0.661314,0.639604,0.619332,0.597003,0.586632,0.570287,0.553147,0.539463,0.530637,0.516946,0.504556,0.480907)))

resultsh2dunified = np.array(((17.3591,15.0937,11.2138,9.24178,8.41545,7.50232,7.027,6.58709,6.30373,6.07995,5.87975,5.70959,5.57542,5.46278,5.3487,5.26105,5.19836,5.13093,5.07011,5.01397,4.9537,4.90878,4.86695,4.82327,4.79964,4.76779,4.74135,4.69865,4.68052,4.64824,4.62307,4.5857),(10.4136,9.25659,7.4666,6.57357,5.98468,5.70673,5.42745,5.25652,5.04163,5.00363,4.89446,4.78703,4.73495,4.64353,4.62645,4.54723,4.54543,4.52689,4.47805,4.462,4.42992,4.396,4.39763,4.35064,4.34834,4.32803,4.32758,4.29871,4.29058,4.25145,4.24602,4.21601),(8.0611,7.46898,6.26936,5.71881,5.32476,5.10383,4.93407,4.76066,4.68769,4.6355,4.58566,4.41426,4.35211,4.25303,4.38587,4.32509,4.34409,4.3327,4.30372,4.24203,4.22986,4.13076,4.08789,4.06093,4.01625,4.00311,3.97645,3.97304,3.98886,3.96054,3.94707,3.95055),(6.86083,6.56336,5.70224,5.25281,4.90004,4.78078,4.64667,4.5854,4.33332,4.45101,4.39425,4.17546,4.21819,4.12022,4.22057,4.09674,4.04612,4.0471,4.00006,3.98516,3.98444,3.96564,3.98117,3.95658,3.94093,3.95871,3.94532,3.92834,3.93863,3.92471,3.9036,3.90801)), dtype=np.float32)

resultsd2hunified = np.array(((26.8516,16.164,12.2174,10.0404,8.57295,7.65331,7.0468,6.62433,6.3352,6.08834,5.88973,5.73647,5.59783,5.47463,5.37108,5.26551,5.19738,5.12991,5.06646,5.02792,4.94403,4.90791,4.87102,4.83492,4.80327,4.77564,4.74686,4.7152,4.69266,4.65836,4.63236,4.60141),(16.1693,10.1125,7.62306,6.62006,6.08743,5.7357,5.47328,5.26982,5.12521,5.00789,4.912,4.83047,4.76891,4.70868,4.64104,4.59102,4.56024,4.5237,4.48923,4.45554,4.42831,4.40959,4.40913,4.37334,4.35971,4.3377,4.32487,4.31626,4.3049,4.29862,4.27477,4.2589),(12.2023,7.63383,6.32441,5.72274,5.37461,5.142,4.95724,4.83749,4.73788,4.63933,4.57734,4.52723,4.48684,4.41244,4.41621,4.38868,4.35956,4.32921,4.31056,4.2859,4.27667,4.18195,4.10569,4.10441,4.05266,3.99918,3.99668,4.0009,4.00962,3.97603,3.97186,3.97662),(10.0834,6.62062,5.72405,5.27314,5.03234,4.84256,4.70614,4.59298,4.53156,4.47589,4.41697,4.37904,4.35065,4.32065,4.27416,4.25851,4.11469,4.08814,4.00169,3.98853,4.00817,3.99192,3.98202,3.98144,3.96871,3.9619,3.96891,3.95455,3.94669,3.95178,3.94169,3.93537)), dtype=np.float32)

#new numbers for d2h
#resultsd2hunified = np.array(((21.107,10.5527,7.03082,5.29448,4.2599,3.8746,3.87505,3.85469,3.88401,3.84663,3.84741,3.84606,3.85697,3.84613,3.84567,3.84562,3.85054,3.84544,3.84574,3.8454,3.84541,3.84545,3.8454,3.84535,3.84544,3.84527,3.84523,3.84552,5.65206,5.65978,3.84544,3.84518),(10.523,5.27951,5.37095,5.69285,5.66382,5.66271,5.65874,5.65867,5.65893,5.65987,5.65911,5.65931,5.65887,5.65875,5.65883,5.65866,5.65866,5.65865,5.6588,5.65871,5.65892,5.65882,5.65879,5.65882,5.65873,5.65871,5.65866,5.6588,5.65874,5.65887,5.65892,5.65893),(7.02985,5.8302,5.66814,5.66556,5.66167,5.65882,5.65876,5.65888,5.65926,5.65898,5.65924,5.6591,5.65875,5.65882,5.65873,5.65871,5.65878,5.65888,5.6588,5.65892,5.65875,5.65874,5.65882,5.65873,5.65872,5.65876,5.65873,5.65872,5.65887,5.65894,5.65881,5.65889),(5.67505,5.75259,5.67003,5.66818,5.66766,5.65892,5.65885,5.65882,5.66054,5.65892,5.65876,5.65896,5.65882,5.65879,5.65887,5.65893,5.65889,5.65873,5.65882,5.65879,5.65876,5.65873,5.65888,5.65869,5.65886,5.65897,5.65893,5.65885,5.65884,5.65881,5.65867,5.6587)), dtype=np.float32)

#new numbers for measurement five to more
resultsh2dunified_old = np.array(((18.6012,9.30352,6.25208,4.76129,3.82389,3.20701,2.7524,2.4309,1.87782,1.74913,1.72239,1.71363,1.71107,1.71087,1.71089,1.71065,1.71094,1.81988,1.71075,1.71089,1.71124,1.7112,1.71133,1.72239,1.72461,1.72497,1.72499,1.72501,1.72501,1.72501,1.72501,1.72506),(13.3267,6.66592,4.44837,3.38678,2.75137,2.31191,1.99946,1.78224,1.72959,1.71359,1.71135,1.71115,1.71112,1.71119,1.71122,1.71087,1.71116,1.71116,1.71103,2.22799,2.22745,2.22769,2.22794,2.22992,1.72503,1.91584,2.22857,2.24585,2.2611,2.2624,2.26221,2.25282),(13.3392,6.67836,4.54948,3.43262,2.75688,2.32465,2.23118,2.22583,2.22688,2.22698,2.2274,2.22666,2.2274,2.22738,2.22744,2.22623,2.22773,2.22762,2.22801,2.22851,2.22843,2.2288,2.2289,2.24905,2.26127,2.26278,2.26153,2.25121,2.261,2.26245,2.25928,2.25754),(11.6613,5.86318,3.9907,3.01304,2.42958,2.24004,2.22656,2.23366,2.22655,2.22653,2.22693,2.2294,1.71117,1.71112,2.22703,2.23737,2.22762,2.22854,1.72501,1.72517,2.25497,2.26242,2.25374,2.24811,2.26248,2.26202,2.25582,2.25075,2.26182,2.2623,2.26211,2.25068)), dtype=np.float32)

#new numbers for measurement 5 to 8
resultsh2dunified_new = np.array(((15.9718,9.30551,6.25216,4.76014,3.82387,3.20701,2.75209,2.4311,2.24496,2.23067,1.72237,2.22688,2.22734,1.71094,1.71087,1.71064,1.71084,1.71081,1.7108,1.71075,1.71079,1.71094,1.71113,1.72235,1.72457,1.72494,1.72499,1.72498,1.72502,1.72497,1.725,1.72503),(13.3237,6.66605,4.44817,3.38445,2.75147,2.31136,1.99893,1.7821,1.72951,1.71356,1.71138,1.71113,1.71114,1.71114,1.71119,1.71104,1.71112,1.71109,1.71104,1.72236,1.72465,1.72499,1.72498,1.72498,1.72499,1.72498,1.72498,1.72503,1.72513,1.72633,1.7264,1.72622),(11.4107,5.72086,3.83843,2.94138,2.37053,2.00057,1.75853,1.72149,1.71185,1.71146,1.7114,1.71133,1.71141,1.71137,1.71137,1.71111,1.71961,1.72467,1.72498,1.72493,1.72501,1.72501,1.72501,1.72501,1.72511,1.72635,1.7264,1.72609,1.72683,1.72669,1.72626,1.7259),(10.0032,5.02021,3.39083,2.58517,2.0884,1.78227,1.72131,1.71188,2.22683,1.71121,1.71128,1.71096,1.71122,1.71108,1.72266,1.72497,1.725,1.72501,1.72502,1.72503,1.72504,1.72582,1.72663,1.72619,1.72601,1.72634,1.7263,1.72608,1.72557,1.7268,1.72592,1.72569)), dtype=np.float32)

#3rd version
resultsh2dunified_new2 = np.array(((18.6026,9.33573,6.2497,4.0146,3.24834,2.74823,2.36638,2.08645,1.8779,1.74892,1.7224,1.71363,1.71105,1.71085,1.7109,1.71069,1.71086,1.71089,1.71082,1.71081,1.71107,1.71118,1.71116,1.72242,1.72458,1.72494,1.72502,1.72499,1.72501,1.72498,1.725,1.72507),(13.323,6.6655,4.44827,3.38658,2.75176,2.31172,1.9992,1.78174,1.72956,1.71357,1.71128,1.71116,1.71119,1.7111,1.71121,1.71112,1.71113,1.71116,1.71113,1.72242,1.7247,1.72499,1.72504,1.72503,1.72501,1.72501,1.72502,1.72503,1.72507,1.7263,1.72636,1.72604),(11.4368,5.72227,3.83896,2.94261,2.37054,2.00032,1.75851,1.72156,1.71185,1.71145,1.71145,1.71134,1.71142,1.71138,1.71141,1.71118,1.71961,1.7247,1.72499,1.72502,1.72498,1.725,1.725,1.72517,1.72508,1.72657,1.72656,1.72598,1.7266,1.72663,1.72567,1.72584),(10.0014,5.01925,3.39005,2.58513,2.08925,2.24019,1.72128,1.71213,1.71129,1.71111,1.71129,1.71128,1.71122,1.71113,1.72265,1.72505,1.72501,1.725,1.72499,1.72512,1.72502,1.72578,1.72653,1.72629,1.7267,1.72594,1.72635,1.72627,1.72614,1.72654,1.72644,1.72569)), dtype=np.float32)

#4th version this time hopefully correctly measured
resultsh2dunified_new3 = np.array(((6.58091,6.24137,5.56837,5.17449,4.95551,4.79368,4.54499,4.43527,4.37018,4.31265,4.26447,4.26817,4.19988,4.1447,4.16734,4.06295,4.08748,4.0779,4.12082,4.09817,4.10904,4.12191,4.11876,4.08868,4.07159,4.05337,4.03094,4.03291,4.01859,3.92383,3.87861,3.88221),(6.15487,5.90709,5.30281,5.02919,4.83591,4.54226,4.40934,4.37638,4.33266,4.27821,4.21716,4.18482,4.04601,4.00259,4.13963,4.08716,4.0222,4.08393,4.11529,4.08095,4.05533,4.02393,4.01386,4.01108,3.91394,3.87423,3.87515,3.89047,3.87068,3.86193,3.86493,3.87685),(5.82822,5.6564,5.14803,4.86943,4.56698,4.40382,4.30452,4.31572,4.24778,4.19288,4.03358,4.09966,4.08197,4.022,4.07535,4.08434,4.05948,4.01914,4.01487,3.97589,3.96801,3.89465,3.87922,3.87476,3.88306,3.8998,3.88938,3.88157,3.91175,3.93191,3.91859,3.90701),(5.6007,5.45522,4.99175,4.7659,4.45625,4.3626,4.29496,4.30685,4.19614,4.08384,4.00912,4.12212,4.10799,4.04374,4.07815,4.14511,4.01967,3.94812,3.90117,3.86188,3.87232,3.893,3.90404,3.88841,3.91244,3.94855,3.94454,3.93209,3.92488,3.94248,3.94484,3.94799)), dtype=np.float32)

#5th version measurement for 5 to 8
resultsh2dunified_new4 = np.array(((6.49052,6.18543,5.50862,5.1216,4.90731,4.74726,4.51923,4.39896,4.34535,4.27931,4.19657,4.23218,4.18001,4.10784,4.11145,4.01848,4.01403,4.01564,4.09436,4.07098,4.07123,4.06569,4.06402,4.04092,4.05275,4.04345,4.00006,3.96721,3.96682,3.89898,3.86505,3.83491),(6.05685,5.83957,5.26986,4.94614,4.77267,4.4924,4.32861,4.32598,4.34034,4.20925,4.17454,4.15143,4.01951,3.97202,4.08543,4.07636,4.02917,4.05355,4.06247,4.03424,4.02423,4.00302,3.97846,3.95529,3.87227,3.84914,3.84756,3.83397,3.84686,3.85542,3.84158,3.83728),(5.72448,5.59564,5.05894,4.82352,4.52793,4.36659,4.28177,4.27898,4.20323,4.14098,4.06906,4.07527,4.05557,3.98371,4.04854,4.07112,4.01552,3.94233,3.97825,3.93407,3.92411,3.85516,3.83734,3.8421,3.86546,3.85705,3.84306,3.85834,3.89457,3.88311,3.87644,3.61672),(4.95533,4.79835,4.37077,4.166,3.9952,3.91929,3.84576,3.86936,3.80055,3.75788,3.71576,3.75522,3.7521,3.68805,3.66584,3.82446,3.70222,3.67456,3.63217,3.63432,3.62245,3.62835,3.62378,3.61808,3.62847,3.61605,3.61316,3.62173,3.61343,3.6108,3.62001,3.61804),))

#redone measuremetn for number 1 to 4
resultsh2dunified = np.array(((16.8905,14.0761,11.2939,9.05071,8.11574,7.89537,7.42388,6.79381,6.4783,6.2244,6.03194,5.80594,5.67312,5.5721,5.43975,5.33152,5.24911,5.17121,5.11921,5.0365,5.00064,4.95453,4.9227,4.88314,4.85318,4.83983,4.80576,4.77538,4.75669,4.72503,4.67375,4.65295),(11.0225,8.26828,7.64129,6.68348,5.80375,5.18501,4.90811,4.736,4.58223,4.46955,4.36352,4.28102,4.22364,4.17587,4.12321,4.0744,4.03449,4.02074,3.97988,3.93731,3.92777,3.90021,3.88042,3.86772,3.84437,3.82721,3.82493,3.79195,3.79098,3.7731,3.75713,3.748),(8.11615,6.39887,5.79525,5.19531,4.83379,4.60647,4.40963,4.29927,4.19485,4.10602,4.03721,3.9838,3.90031,3.87765,3.89255,3.80206,3.82064,3.81867,3.78669,3.76032,3.74237,3.70839,3.68289,3.66241,3.65842,3.62457,3.62135,3.60075,3.60434,3.58997,3.58626,3.57636),(6.68966,5.88923,5.22119,4.77272,4.4848,4.30309,4.17064,4.08108,3.98083,4.20623,4.30106,4.19493,4.16102,4.0908,4.19591,4.12947,4.03163,4.04777,4.038,3.98904,4.00394,3.99742,3.987,3.9887,3.98731,3.95578,3.96582,3.95696,3.94426,3.9529,3.94278,3.92754)))

 
resultsh2dunified = np.concatenate((resultsh2dunified, resultsh2dunified_new4))
#resultsh2dunified = resultsh2dunified_new2 #(resultsh2dunified_new + resultsh2dunified_old) /2 
resultsd2hunified = np.concatenate((resultsd2hunified,resultsd2hunified))
#results =



sbpltNbmr = 1
rubbish, sbplts = plt.subplots(sbpltNbmr)
    
for i in range(sbpltNbmr):
    plotNumber = i
    """    
    if i == 0:
        resgbs= resultsd2hunified.astype(float)
        sbplts[plotNumber].set_title("Device to Host")
    if i == 1:
        resgbs = resultsh2dunified.astype(float)
        sbplts[plotNumber].set_title("Host to Device")
    """
    resgbs = resultsh2dunified.astype(float)
    sbplts.set_title("Host to Device")
    
    
    resgbs = np.divide(resgbs,5)
    resgbs = np.divide((2 ** 29) * 4, resgbs.astype(float))        
    resgbs= np.divide(resgbs, 1e9)
    
    for lines in range(np.shape(resultsh2dunified)[0]):
        """
        sbplts[plotNumber].plot(xaxis*(lines+1), resgbs[lines,:], label = "Anzahl Bloecke = " + str(lines + 1))
        sbplts[plotNumber].scatter(xaxis*(lines+1), resgbs[lines,:], s = 2)
            #plt.axis.Tick
        sbplts[plotNumber].grid()
        sbplts[plotNumber].legend(bbox_to_anchor=(1.05,1), loc = 2)
        """
        sbplts.plot(xaxis*(lines+1), resgbs[lines,:], label = "Anzahl Bloecke = " + str(lines + 1))
        sbplts.scatter(xaxis*(lines+1), resgbs[lines,:], s = 2)
            #plt.axis.Tick
        sbplts.grid(True)
        sbplts.legend(bbox_to_anchor=(1.05,1), loc = 2)
       # sbplts[plotNumber].set_title("N =" + str((2 ** plotNumber) * 8))
        
plt.xlabel("Anzahl Threads")
plt.ylabel("Datendurchsatz in GB/s")
plt.savefig('fig.svg', format='svg', bbox_inches='tight')

rcParams['figure.figsize'] = 5, 3