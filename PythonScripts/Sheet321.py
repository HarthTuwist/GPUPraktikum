# -*- coding: utf-8 -*-
"""
Created on Sun May 21 19:21:45 2017

@author: ubuntu
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rcParams
rcParams.update({'figure.autolayout': True})

#size = np.multiply(np.arange(1,11), np.power(2, 27))
xaxis = (np.arange(32) +1 )* 32
#xaxis = np.power(2, np.arange(11))

#measuring results
#resultsd2hwritecomb = np.array(((41.9474,21.0309,14.0309,10.5513,8.45035,7.08607,6.08876,5.31453,4.73476,4.28554,3.91484,3.59785,3.3902,3.40156,3.38815,3.37863,3.41566,3.39318,3.38754,3.38801,3.42083,3.39246,3.38617,3.38673,3.40974,3.39274,3.38862,3.38805,3.41035,3.3877,3.39219,3.38759),(20.9818,10.5335,7.03512,5.29769,4.25629,3.5606,3.39599,3.39048,3.42612,3.38762,3.38574,3.38318,3.40131,3.38837,3.39036,3.38856,3.40144,3.39643,3.39616,3.3966,3.39987,3.40143,3.39897,3.4003,3.39865,3.40343,3.40121,3.40569,3.40786,3.40572,3.40678,3.41126),(14.0112,7.04101,4.70981,3.55148,3.4279,3.40671,3.40076,3.39791,3.40017,3.38978,3.38713,3.38797,3.39229,3.39422,3.39688,3.39677,3.40042,3.40205,3.40241,3.40276,3.40295,3.40693,3.40317,3.40648,3.40642,3.40841,3.40538,3.40441,3.41063,3.40885,3.4094,3.407),(10.5173,5.29651,3.54786,3.44469,3.41793,3.41623,3.39222,3.40306,3.39258,3.39587,3.39294,3.39357,3.3954,3.39762,3.39953,3.40015,3.40143,3.4025,3.40511,3.40314,3.40264,3.4001,3.40355,3.40495,3.40477,3.40421,3.40495,3.40981,3.40687,3.40524,3.40394,3.41703)))


###########TODO 
#resultsh2dwritecomb = np.array(((151.559,76.1797,50.6403,38.0219,30.3985,25.348,21.7086,19.0613,16.8898,15.2268,13.823,12.676,11.6954,10.8659,10.1589,9.59133,8.9799,8.4628,8.04182,7.62231,7.27253,6.95566,6.69223,6.43083,6.19842,5.96844,5.78145,5.59266,5.42004,5.24205,5.0973,4.94834),(76.1189,38.0676,25.3402,19.0584,15.2165,12.6805,10.8651,9.58559,8.44099,7.6076,6.93227,6.41195,5.95326,5.58063,5.24261,4.94466,4.66508,4.42981,4.21108,4.02489,3.85722,3.71245,3.64918,3.61161,3.57373,3.55238,3.54565,3.53856,3.53627,3.53488,3.53475,3.53697),(50.6375,25.3782,16.8871,12.6981,10.1455,8.44578,7.25164,6.40795,5.76706,5.24367,4.7943,4.41682,4.10725,3.84441,3.66942,3.6167,3.55911,3.54292,3.53535,3.53163,3.53105,3.53191,3.53116,3.53176,3.53114,3.5305,3.53079,3.53179,3.53051,3.53061,3.52971,3.53164),(38.0221,19.0682,12.6778,9.58729,7.59984,6.40269,5.57813,4.93873,4.41083,4.01632,3.69758,3.61617,3.55248,3.53754,3.53416,3.53754,3.53321,3.53285,3.53321,3.53361,3.53258,3.53416,3.53389,3.53682,3.53463,3.53448,3.53582,3.53604,3.53532,3.48037,3.48012,3.48138)))
resultsd2hwritecomb = np.array(((21.0101,10.5157,7.01552,5.27569,4.23107,3.54034,3.04409,2.65754,2.36672,2.14287,1.95757,1.79907,1.69494,1.6996,1.69354,1.68825,1.70907,1.69694,1.69534,1.69406,1.71096,1.6971,1.69327,1.69225,1.70574,1.69601,1.69494,1.69506,1.70513,1.69398,1.69662,1.69346),(10.4746,5.26663,3.52087,2.64894,2.13375,1.78493,1.69758,1.69194,1.7129,1.69405,1.69384,1.69155,1.70049,1.69472,1.69637,1.696,1.7011,1.69944,1.69825,1.69966,1.69921,1.70066,1.70002,1.70007,1.69977,1.70283,1.70201,1.7056,1.70467,1.7044,1.7048,1.70783),(7.01125,3.52092,2.35478,1.77597,1.71558,1.70357,1.70058,1.69925,1.70167,1.6962,1.693,1.69438,1.69557,1.69646,1.69748,1.69849,1.70095,1.70193,1.70169,1.70278,1.70177,1.70362,1.70219,1.70382,1.70349,1.70423,1.70308,1.70525,1.70545,1.7045,1.70411,1.70469),(5.2676,2.64844,1.77489,1.71175,1.71168,1.708,1.69637,1.69442,1.69839,1.69737,1.69639,1.69735,1.69747,1.69872,1.70014,1.70084,1.70119,1.70239,1.70199,1.70261,1.70186,1.70076,1.70216,1.70232,1.70232,1.70287,1.70343,1.70631,1.70452,1.70198,1.70163,1.70922)))

resultsh2dwritecomb = np.array(((75.947,38.2142,25.4108,19.0797,15.2557,12.7224,10.8954,9.56198,8.47531,7.63718,6.93824,6.36099,5.87107,5.45436,5.09771,4.80907,4.50481,4.24673,4.03384,3.82538,3.65023,3.49063,3.35683,3.22656,3.11193,2.99442,2.90253,2.8052,2.71846,2.62965,2.55822,2.48183),(38.1518,19.0991,12.713,9.55934,7.6343,6.36428,5.45303,4.80651,4.23573,3.81775,3.47853,3.21591,2.98877,2.79969,2.63093,2.48056,2.34046,2.2223,2.11273,2.01883,1.93507,1.86176,1.82567,1.80427,1.78627,1.77382,1.76887,1.76562,1.76435,1.7637,1.76346,1.76393),(25.4171,12.7344,8.47478,6.37287,5.09305,4.2388,3.63661,3.216,2.89342,2.63119,2.40509,2.21582,2.05956,1.92713,1.83584,1.80775,1.77803,1.7687,1.7643,1.76266,1.76225,1.76287,1.76225,1.76225,1.76208,1.76185,1.76219,1.76242,1.76192,1.76222,1.76173,1.76221),(19.0739,9.56546,6.36416,4.80689,3.81345,3.21292,2.79891,2.47882,2.21309,2.01292,1.85442,1.8077,1.77343,1.765,1.7632,1.76452,1.76287,1.76266,1.76285,1.76315,1.76284,1.76322,1.7631,1.76402,1.76327,1.7632,1.76361,1.76376,1.7637,1.7394,1.73899,1.73987)))

#new measurement
resultsd2hwritecomb = np.array(((21.0071,10.5109,7.0267,5.27739,4.24546,3.54112,3.0452,2.66101,2.37487,2.14672,1.96155,1.80248,1.69427,1.6976,1.69068,1.68506,1.70655,1.69734,1.68872,1.68669,1.70434,1.68984,1.68757,1.686,1.69819,1.68735,1.68795,1.68714,1.69846,1.68835,1.68861,1.68668),(10.4854,5.27263,3.53277,2.65049,2.13361,1.78243,1.69561,1.6894,1.71199,1.6943,1.69094,1.68885,1.69618,1.69452,1.68927,1.68994,1.6959,1.69245,1.69197,1.69187,1.69354,1.69253,1.69267,1.69185,1.6925,1.6931,1.69341,1.69187,1.69364,1.69388,1.69412,1.69308),(7.03014,3.53448,2.35771,1.77466,1.71488,1.72019,1.69568,1.69695,1.69698,1.69529,1.6914,1.69209,1.6933,1.69551,1.69329,1.69417,1.69396,1.69583,1.69517,1.69463,1.69631,1.69524,1.69527,1.69327,1.69476,1.69583,1.6964,1.69541,1.69575,1.69602,1.69552,1.6938),(5.26936,2.65222,1.77365,1.71119,1.70809,1.7196,1.69399,1.69385,1.69337,1.69929,1.69402,1.69474,1.6945,1.69677,1.6963,1.69683,1.69763,1.69745,1.69699,1.69651,1.69675,1.6963,1.69597,1.69512,1.69582,1.69646,1.69635,1.69443,1.69623,1.6962,1.69673,1.69777)))
#results =
#divide by 10 because we measured 10 times

sbpltNbmr = 2
rubbish, sbplts = plt.subplots(sbpltNbmr)
    
for i in range(sbpltNbmr):
    plotNumber = i
        
    if i == 0:
        resgbs= resultsd2hwritecomb
        sbplts[plotNumber].set_title("Device to Host")
    if i == 1:
        resgbs = resultsh2dwritecomb
        sbplts[plotNumber].set_title("Host to Device")
    
    resgbs = np.divide(resgbs,5)
    resgbs = np.divide((2 ** 29) * 4, resgbs.astype(float))        
    resgbs= np.divide(resgbs, 1e9)
    
    for lines in range(0, np.shape(resultsd2hwritecomb)[0]):
    
        sbplts[plotNumber].plot(xaxis*(lines+1), resgbs[lines,:], label = "Anzaehl Bloecke = " + str(lines + 1))
        sbplts[plotNumber].scatter(xaxis*(lines+1), resgbs[lines,:], s = 2)
            #plt.axis.Tick
        sbplts[plotNumber].grid(True)
        sbplts[plotNumber].legend(bbox_to_anchor=(1.05,1), loc = 2)
       # sbplts[plotNumber].set_title("N =" + str((2 ** plotNumber) * 8))
        
plt.xlabel("Gesamtzahl Threads")
plt.ylabel("Datendurchsatz in GB/s")
plt.savefig('fig.svg', format='svg', bbox_inches='tight')
