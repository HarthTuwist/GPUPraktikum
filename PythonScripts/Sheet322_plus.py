# -*- coding: utf-8 -*-
"""
Created on Sun May 21 19:21:45 2017

@author: ubuntu
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rcParams
rcParams.update({'figure.autolayout': True})

#size = np.multiply(np.arange(1,11), np.power(2, 27))
xaxis = (np.arange(32) +1 )* 32
#xaxis = np.power(2, np.arange(11))

#measuring results
resultsd2plus= np.array(((43.8618,21.9929,14.8263,11.1926,8.98973,7.50898,6.44409,5.6533,5.02961,4.53757,4.13667,3.80056,3.53119,3.29909,3.09662,2.90073,2.77451,2.64145,2.51751,2.38879,2.31195,2.22023,2.13926,2.04811,1.99747,1.9313,1.86612,1.79231,1.7646,1.71338,1.66723,1.60746),(21.9926,11.0607,7.46601,5.62787,4.52338,3.78598,3.25531,2.86725,2.58828,2.35745,2.17524,2.00932,1.88149,1.7732,1.66577,1.5626,1.50803,1.43592,1.37873,1.3178,1.27523,1.23048,1.18821,1.14784,1.11726,1.0844,1.05249,1.01847,0.998553,0.974921,0.949329,0.914101),(14.7361,7.44217,5.01487,3.77552,3.04444,2.57889,2.24676,1.999,1.80948,1.64586,1.51922,1.4145,1.335,1.25859,1.19259,1.12875,1.0828,1.03456,0.992339,0.948358,0.92252,0.891812,0.86054,0.831559,0.818017,0.794529,0.770664,0.747562,0.735683,0.716695,0.698917,0.679443),(11.0686,5.59791,3.77439,2.84837,2.32852,1.99531,1.73724,1.53109,1.40867,1.29214,1.20366,1.11823,1.05367,0.996054,0.940051,0.886586,0.861536,0.824106,0.793637,0.763514,0.742182,0.717199,0.694915,0.67065,0.659214,0.64105,0.623429,0.605576,0.597685,0.581675,0.570894,0.554635)))                                             

###########TODO 
resultsh2dplus = np.array(((45.1155,22.6244,15.0922,11.3304,9.05928,7.55562,6.48208,5.68374,5.07522,4.59074,4.19141,3.85066,3.59546,3.36267,3.15663,2.96076,2.83187,2.69371,2.56697,2.43718,2.35318,2.2581,2.17582,2.0841,2.03088,1.9644,1.89881,1.82739,1.79556,1.74078,1.69507,1.63636),(22.6088,11.31,7.54615,5.66559,4.54868,3.82309,3.30719,2.91375,2.63814,2.40487,2.21211,2.05003,1.91828,1.79715,1.69197,1.59699,1.53526,1.46565,1.40357,1.34558,1.29933,1.25118,1.20914,1.16412,1.13596,1.10185,1.06882,1.03474,1.01882,0.990516,0.966838,0.934233),(15.0835,7.54627,5.04567,3.81717,3.09844,2.63767,2.29838,2.04227,1.84477,1.67984,1.54623,1.4418,1.35804,1.27938,1.20807,1.14425,1.09746,1.0495,1.00617,0.966498,0.938264,0.904869,0.875346,0.843832,0.826199,0.803084,0.779472,0.757608,0.745931,0.726192,0.709087,0.689782),(11.3171,5.66211,3.81396,2.89003,2.38229,2.03504,1.77269,1.56535,1.43541,1.31754,1.22056,1.13518,1.07028,1.01086,0.95835,0.902238,0.876922,0.837661,0.804388,0.772747,0.751972,0.727848,0.704156,0.680115,0.667759,0.650278,0.632445,0.61551,0.606218,0.591004,0.57953,0.562504)))





#results =
#divide by 10 because we measured 10 times

sbpltNbmr = 2
rubbish, sbplts = plt.subplots(sbpltNbmr)
    
for i in range(sbpltNbmr):
    plotNumber = i
        
    if i == 0:
        resgbs= resultsd2plus
        sbplts[plotNumber].set_title("Device to Host")
    if i == 1:
        resgbs = resultsh2dplus
        sbplts[plotNumber].set_title("Host to Device")
    
    resgbs = np.divide(resgbs,10)
    resgbs = np.divide(np.power(2,29), resgbs);        
    resgbs= np.divide(resgbs, 1e9)
    
    for lines in range(0, np.shape(resultsd2plus)[0]):
        
        sbplts[plotNumber].grid(True)    
        sbplts[plotNumber].plot(xaxis*(lines+1), resgbs[lines,:], label = "M = " + str(lines + 1))
        sbplts[plotNumber].scatter(xaxis*(lines+1), resgbs[lines,:], s = 2)
            #plt.axis.Tick
        sbplts[plotNumber].legend(bbox_to_anchor=(1.05,1), loc = 2)
       # sbplts[plotNumber].set_title("N =" + str((2 ** plotNumber) * 8))
        
plt.xlabel("m")
plt.ylabel("Datendurchsatz in GB/s")
plt.savefig('fig.svg', format='svg', bbox_inches='tight')
