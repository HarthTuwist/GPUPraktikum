# -*- coding: utf-8 -*-
"""
Created on Sun May 21 19:21:45 2017

@author: ubuntu
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rcParams
rcParams.update({'figure.autolayout': True})
rcParams['figure.figsize'] = 5, 5
#size = np.multiply(np.arange(1,11), np.power(2, 27))
xaxis = (np.arange(32) +1 )* 32
#xaxis = np.power(2, np.arange(11))

#measuring results
#resultsd2hunified= np.array(((42.0468,21.0862,14.0966,10.6007,8.53908,7.15212,6.13771,5.35744,4.80669,4.35236,3.97191,3.6456,3.39006,3.15665,2.95694,2.77213,2.62678,2.49054,2.36475,2.24695,2.157,2.06565,1.98658,1.90318,1.84874,1.78628,1.72601,1.66145,1.62614,1.57729,1.53398,1.48152),(21.0883,10.5728,7.11558,5.32338,4.30665,3.62923,3.12605,2.73491,2.46135,2.22667,2.03319,1.87008,1.7465,1.62551,1.53075,1.43409,1.37455,1.30952,1.25266,1.19536,1.15847,1.11601,1.08035,1.0392,1.01555,0.980526,0.950575,0.919839,0.901532,0.87627,0.855656,0.828594),(14.0892,7.11036,4.74588,3.60701,2.91815,2.45158,2.1135,1.86185,1.67405,1.51691,1.39174,1.28797,1.21333,1.14255,1.07946,1.02149,0.978968,0.932346,0.891365,0.852514,0.828545,0.797285,0.771548,0.744572,0.73223,0.712422,0.692633,0.670884,0.65859,0.641241,0.625269,0.609007),(10.5802,5.31883,3.59741,2.71311,2.20938,1.86096,1.60617,1.41093,1.28475,1.17574,1.08562,1.00965,0.952264,0.893734,0.843507,0.799963,0.770293,0.73701,0.70941,0.683883,0.664016,0.63987,0.61824,0.597763,0.586372,0.569921,0.553578,0.53741,0.529855,0.516517,0.503108,0.469825)))


###########TODO 
#resultsh2dunified = np.array(((42.0506,21.0859,14.0977,10.6014,8.53246,7.14858,6.1336,5.35601,4.80231,4.3495,3.97016,3.64763,3.39462,3.15905,2.9595,2.77747,2.62916,2.49378,2.36778,2.2519,2.15784,2.06747,1.9887,1.90722,1.85041,1.78741,1.72702,1.66538,1.62816,1.57721,1.53363,1.48628),(21.0318,10.5737,7.11145,5.31906,4.30054,3.62079,3.12323,2.74068,2.464,2.22898,2.03305,1.87011,1.74381,1.62671,1.52915,1.43615,1.37585,1.31209,1.25409,1.20079,1.15853,1.11405,1.07511,1.03574,1.00927,0.978097,0.947257,0.92025,0.903101,0.879186,0.859407,0.834743),(14.0702,7.10753,4.74118,3.60728,2.91437,2.45552,2.11575,1.86376,1.6725,1.51784,1.39184,1.29052,1.21612,1.14104,1.07611,1.01701,0.974529,0.9302,0.89122,0.856223,0.831248,0.801768,0.773573,0.745422,0.729557,0.709002,0.688508,0.669497,0.658319,0.641678,0.625448,0.609671),(10.5662,5.31638,3.60067,2.7162,2.21142,1.85944,1.60437,1.41545,1.2864,1.17688,1.08398,1.00518,0.949749,0.894237,0.84889,0.802002,0.773029,0.738783,0.708354,0.67888,0.661314,0.639604,0.619332,0.597003,0.586632,0.570287,0.553147,0.539463,0.530637,0.516946,0.504556,0.480907)))

resultsh2dunified = np.array(((17.3591,15.0937,11.2138,9.24178,8.41545,7.50232,7.027,6.58709,6.30373,6.07995,5.87975,5.70959,5.57542,5.46278,5.3487,5.26105,5.19836,5.13093,5.07011,5.01397,4.9537,4.90878,4.86695,4.82327,4.79964,4.76779,4.74135,4.69865,4.68052,4.64824,4.62307,4.5857),(10.4136,9.25659,7.4666,6.57357,5.98468,5.70673,5.42745,5.25652,5.04163,5.00363,4.89446,4.78703,4.73495,4.64353,4.62645,4.54723,4.54543,4.52689,4.47805,4.462,4.42992,4.396,4.39763,4.35064,4.34834,4.32803,4.32758,4.29871,4.29058,4.25145,4.24602,4.21601),(8.0611,7.46898,6.26936,5.71881,5.32476,5.10383,4.93407,4.76066,4.68769,4.6355,4.58566,4.41426,4.35211,4.25303,4.38587,4.32509,4.34409,4.3327,4.30372,4.24203,4.22986,4.13076,4.08789,4.06093,4.01625,4.00311,3.97645,3.97304,3.98886,3.96054,3.94707,3.95055),(6.86083,6.56336,5.70224,5.25281,4.90004,4.78078,4.64667,4.5854,4.33332,4.45101,4.39425,4.17546,4.21819,4.12022,4.22057,4.09674,4.04612,4.0471,4.00006,3.98516,3.98444,3.96564,3.98117,3.95658,3.94093,3.95871,3.94532,3.92834,3.93863,3.92471,3.9036,3.90801)), dtype=np.float32)

resultsd2hunified = np.array(((26.8516,16.164,12.2174,10.0404,8.57295,7.65331,7.0468,6.62433,6.3352,6.08834,5.88973,5.73647,5.59783,5.47463,5.37108,5.26551,5.19738,5.12991,5.06646,5.02792,4.94403,4.90791,4.87102,4.83492,4.80327,4.77564,4.74686,4.7152,4.69266,4.65836,4.63236,4.60141),(16.1693,10.1125,7.62306,6.62006,6.08743,5.7357,5.47328,5.26982,5.12521,5.00789,4.912,4.83047,4.76891,4.70868,4.64104,4.59102,4.56024,4.5237,4.48923,4.45554,4.42831,4.40959,4.40913,4.37334,4.35971,4.3377,4.32487,4.31626,4.3049,4.29862,4.27477,4.2589),(12.2023,7.63383,6.32441,5.72274,5.37461,5.142,4.95724,4.83749,4.73788,4.63933,4.57734,4.52723,4.48684,4.41244,4.41621,4.38868,4.35956,4.32921,4.31056,4.2859,4.27667,4.18195,4.10569,4.10441,4.05266,3.99918,3.99668,4.0009,4.00962,3.97603,3.97186,3.97662),(10.0834,6.62062,5.72405,5.27314,5.03234,4.84256,4.70614,4.59298,4.53156,4.47589,4.41697,4.37904,4.35065,4.32065,4.27416,4.25851,4.11469,4.08814,4.00169,3.98853,4.00817,3.99192,3.98202,3.98144,3.96871,3.9619,3.96891,3.95455,3.94669,3.95178,3.94169,3.93537)), dtype=np.float32)

#results =
#divide by 10 because we measured 10 times

sbpltNbmr = 2
rubbish, sbplts = plt.subplots(sbpltNbmr)
    
for i in range(sbpltNbmr):
    plotNumber = i
        
    if i == 0:
        resgbs= resultsd2hunified.astype(float)
        sbplts[plotNumber].set_title("Device to Host")
    if i == 1:
        resgbs = resultsh2dunified.astype(float)
        sbplts[plotNumber].set_title("Host to Device")
    
    resgbs = np.divide(resgbs,5)
    resgbs = np.divide((2 ** 29) * 4, resgbs.astype(float))        
    resgbs= np.divide(resgbs, 1e9)
    
    for lines in range(0, np.shape(resultsd2hunified)[0]):
    
        sbplts[plotNumber].plot(xaxis*(lines+1), resgbs[lines,:], label = "Anzahl Bloecke = " + str(lines + 1))
        sbplts[plotNumber].scatter(xaxis*(lines+1), resgbs[lines,:], s = 2)
            #plt.axis.Tick
        sbplts[plotNumber].grid()
        sbplts[plotNumber].legend(bbox_to_anchor=(1.05,1), loc = 2)
       # sbplts[plotNumber].set_title("N =" + str((2 ** plotNumber) * 8))
        
plt.xlabel("Anzahl Threads pro Block")
plt.ylabel("Kopierrate in GB/s")
plt.savefig('fig.svg', format='svg', bbox_inches='tight')
rcParams['figure.figsize'] = 5, 3